from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
from scanner.full_scan import MalwareScanner

app = FastAPI()

# Initialize the malware scanner
scanner = MalwareScanner()

class ScanRequest(BaseModel):
    path: str
    recursive: bool = True
    deep_scan: bool = False

@app.get("/")
def read_root():
    return {"message": "Welcome to the AI Malware Scanner API"}

@app.post("/scan")
def scan_directory(request: ScanRequest):
    """
    Scan a directory for malware.
    """
    try:
        results = scanner.scan_directory(
            directory=request.path,
            recursive=request.recursive,
            file_extensions=None if request.deep_scan else ['.exe', '.dll', '.sys', '.scr', '.bat', '.cmd', '.vbs', '.ps1', '.js']
        )
        return results
    except Exception as e:
        raise HTTPException(status_code=500, detail=f"Error scanning directory: {str(e)}")

@app.post("/scan-file")
def scan_file(file_path: str):
    """
    Scan a single file for malware.
    """
    try:
        result = scanner.scan_file(file_path)
        return result
    except Exception as e:
        raise HTTPException(status_code=500, detail=f"Error scanning file: {str(e)}")

@app.get("/stats")
def get_scan_stats():
    """
    Get the latest scan statistics.
    """
    return scanner.stats