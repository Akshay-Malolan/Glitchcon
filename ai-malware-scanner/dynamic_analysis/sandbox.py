import time
import requests

# Update with your actual Cuckoo Sandbox server URL
CUCKOO_URL = "http://your-cuckoo-server:8090"

def run_in_cuckoo(file_path):
    upload_url = f"{CUCKOO_URL}/tasks/create/file"
    try:
        with open(file_path, "rb") as f:
            files = {"file": f}
            print("Uploading file to Cuckoo Sandbox...")
            response = requests.post(upload_url, files=files)
        if response.status_code != 200:
            return {"error": f"Failed to create task. Status code: {response.status_code}"}
        result = response.json()
        task_id = result.get("task_id")
        if not task_id:
            return {"error": "No task ID returned from Cuckoo."}
        print(f"Task created with ID: {task_id}")
        # Poll for the analysis report
        view_url = f"{CUCKOO_URL}/tasks/view/{task_id}"
        for _ in range(60):  # Poll for up to 10 minutes
            time.sleep(10)
            poll_response = requests.get(view_url)
            if poll_response.status_code == 200:
                task_result = poll_response.json()
                if task_result.get("task", {}).get("status") == "reported":
                    print("Cuckoo analysis complete.")
                    return task_result
                else:
                    print("Waiting for Cuckoo analysis to complete...")
            else:
                print("Error polling Cuckoo:", poll_response.status_code)
        return {"error": "Cuckoo analysis did not complete in expected time."}
    except Exception as e:
        return {"error": str(e)}

if __name__ == "__main__":
    sample_file = "malware_sample.exe"  # Replace with an actual test file
    report = run_in_cuckoo(sample_file)
    print(report)
